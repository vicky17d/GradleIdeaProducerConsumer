plugins {
    id 'java-library'
    id 'idea'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir "src/foo/java"
        }
    }
}

sourceSets {
    foo {
        java {
            srcDir 'src/foo/java'
        }
    }

//    main {
//        compileClasspath += files(foo.output.classesDirs)  //This helps if we are using FooApi in the same module as MainApi i.e. in Tester class
//                                                            // i.e. gradlewe compileJava works for producer
//                                                            // TODO but ./gradle consumer:compileJava still does not work in the consumer
//                                                            // If we don't have code on line #13 where we adding src/foo/bar to main's java, this is needed
                                                                // but with  that code, this is not needed
//    }
}

idea {
    module {
        sourceDirs += sourceSets.foo.java.srcDirs  //This makes IntelliJ compile for Consumer using FooApi but not Gradle
    }
}

configurations {
    bar
}
//dependencies {
//    compile files('src/foo/java')
//}





// Just a helper method to see all properties
task sourceSetJavaProperties () {
    doLast() {
        sourceSets {
            main {
                println "java.srcDirs = ${java.srcDirs}"
                println "resources.srcDirs = ${resources.srcDirs}"
                println "java.files = ${java.files.name}"
                println "allJava.files = ${allJava.files.name}"
                println "resources.files = ${resources.files.name}"
                println "allSource.files = ${allSource.files.name}"
                println "output.classesDir = ${output.classesDirs}"
                println "output.resourcesDir = ${output.resourcesDir}"
                println "output.files = ${output.files}"
            }
        }
    }
}